// Code generated by protoc-gen-gogo.
// source: stmt.proto
// DO NOT EDIT!

package proto

import proto1 "github.com/gogo/protobuf/proto"
import fmt "fmt"
import math "math"

// Reference imports to suppress errors if they are not otherwise used.
var _ = proto1.Marshal
var _ = fmt.Errorf
var _ = math.Inf

type Statement struct {
	Id        string         `protobuf:"bytes,1,opt,name=id,proto3" json:"id,omitempty"`
	Publisher string         `protobuf:"bytes,2,opt,name=publisher,proto3" json:"publisher,omitempty"`
	Namespace string         `protobuf:"bytes,3,opt,name=namespace,proto3" json:"namespace,omitempty"`
	Body      *StatementBody `protobuf:"bytes,4,opt,name=body" json:"body,omitempty"`
	Timestamp int64          `protobuf:"varint,5,opt,name=timestamp,proto3" json:"timestamp,omitempty"`
	Signature []byte         `protobuf:"bytes,6,opt,name=signature,proto3" json:"signature,omitempty"`
}

func (m *Statement) Reset()                    { *m = Statement{} }
func (m *Statement) String() string            { return proto1.CompactTextString(m) }
func (*Statement) ProtoMessage()               {}
func (*Statement) Descriptor() ([]byte, []int) { return fileDescriptorStmt, []int{0} }

func (m *Statement) GetBody() *StatementBody {
	if m != nil {
		return m.Body
	}
	return nil
}

type StatementBody struct {
	// Types that are valid to be assigned to Body:
	//	*StatementBody_Simple
	//	*StatementBody_Compound
	//	*StatementBody_Envelope
	//	*StatementBody_Archive
	Body isStatementBody_Body `protobuf_oneof:"body"`
}

func (m *StatementBody) Reset()                    { *m = StatementBody{} }
func (m *StatementBody) String() string            { return proto1.CompactTextString(m) }
func (*StatementBody) ProtoMessage()               {}
func (*StatementBody) Descriptor() ([]byte, []int) { return fileDescriptorStmt, []int{1} }

type isStatementBody_Body interface {
	isStatementBody_Body()
}

type StatementBody_Simple struct {
	Simple *SimpleStatement `protobuf:"bytes,1,opt,name=simple,oneof"`
}
type StatementBody_Compound struct {
	Compound *CompoundStatement `protobuf:"bytes,2,opt,name=compound,oneof"`
}
type StatementBody_Envelope struct {
	Envelope *EnvelopeStatement `protobuf:"bytes,3,opt,name=envelope,oneof"`
}
type StatementBody_Archive struct {
	Archive *ArchiveStatement `protobuf:"bytes,4,opt,name=archive,oneof"`
}

func (*StatementBody_Simple) isStatementBody_Body()   {}
func (*StatementBody_Compound) isStatementBody_Body() {}
func (*StatementBody_Envelope) isStatementBody_Body() {}
func (*StatementBody_Archive) isStatementBody_Body()  {}

func (m *StatementBody) GetBody() isStatementBody_Body {
	if m != nil {
		return m.Body
	}
	return nil
}

func (m *StatementBody) GetSimple() *SimpleStatement {
	if x, ok := m.GetBody().(*StatementBody_Simple); ok {
		return x.Simple
	}
	return nil
}

func (m *StatementBody) GetCompound() *CompoundStatement {
	if x, ok := m.GetBody().(*StatementBody_Compound); ok {
		return x.Compound
	}
	return nil
}

func (m *StatementBody) GetEnvelope() *EnvelopeStatement {
	if x, ok := m.GetBody().(*StatementBody_Envelope); ok {
		return x.Envelope
	}
	return nil
}

func (m *StatementBody) GetArchive() *ArchiveStatement {
	if x, ok := m.GetBody().(*StatementBody_Archive); ok {
		return x.Archive
	}
	return nil
}

// XXX_OneofFuncs is for the internal use of the proto package.
func (*StatementBody) XXX_OneofFuncs() (func(msg proto1.Message, b *proto1.Buffer) error, func(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error), func(msg proto1.Message) (n int), []interface{}) {
	return _StatementBody_OneofMarshaler, _StatementBody_OneofUnmarshaler, _StatementBody_OneofSizer, []interface{}{
		(*StatementBody_Simple)(nil),
		(*StatementBody_Compound)(nil),
		(*StatementBody_Envelope)(nil),
		(*StatementBody_Archive)(nil),
	}
}

func _StatementBody_OneofMarshaler(msg proto1.Message, b *proto1.Buffer) error {
	m := msg.(*StatementBody)
	// body
	switch x := m.Body.(type) {
	case *StatementBody_Simple:
		_ = b.EncodeVarint(1<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.Simple); err != nil {
			return err
		}
	case *StatementBody_Compound:
		_ = b.EncodeVarint(2<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.Compound); err != nil {
			return err
		}
	case *StatementBody_Envelope:
		_ = b.EncodeVarint(3<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.Envelope); err != nil {
			return err
		}
	case *StatementBody_Archive:
		_ = b.EncodeVarint(4<<3 | proto1.WireBytes)
		if err := b.EncodeMessage(x.Archive); err != nil {
			return err
		}
	case nil:
	default:
		return fmt.Errorf("StatementBody.Body has unexpected type %T", x)
	}
	return nil
}

func _StatementBody_OneofUnmarshaler(msg proto1.Message, tag, wire int, b *proto1.Buffer) (bool, error) {
	m := msg.(*StatementBody)
	switch tag {
	case 1: // body.simple
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(SimpleStatement)
		err := b.DecodeMessage(msg)
		m.Body = &StatementBody_Simple{msg}
		return true, err
	case 2: // body.compound
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(CompoundStatement)
		err := b.DecodeMessage(msg)
		m.Body = &StatementBody_Compound{msg}
		return true, err
	case 3: // body.envelope
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(EnvelopeStatement)
		err := b.DecodeMessage(msg)
		m.Body = &StatementBody_Envelope{msg}
		return true, err
	case 4: // body.archive
		if wire != proto1.WireBytes {
			return true, proto1.ErrInternalBadWireType
		}
		msg := new(ArchiveStatement)
		err := b.DecodeMessage(msg)
		m.Body = &StatementBody_Archive{msg}
		return true, err
	default:
		return false, nil
	}
}

func _StatementBody_OneofSizer(msg proto1.Message) (n int) {
	m := msg.(*StatementBody)
	// body
	switch x := m.Body.(type) {
	case *StatementBody_Simple:
		s := proto1.Size(x.Simple)
		n += proto1.SizeVarint(1<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case *StatementBody_Compound:
		s := proto1.Size(x.Compound)
		n += proto1.SizeVarint(2<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case *StatementBody_Envelope:
		s := proto1.Size(x.Envelope)
		n += proto1.SizeVarint(3<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case *StatementBody_Archive:
		s := proto1.Size(x.Archive)
		n += proto1.SizeVarint(4<<3 | proto1.WireBytes)
		n += proto1.SizeVarint(uint64(s))
		n += s
	case nil:
	default:
		panic(fmt.Sprintf("proto: unexpected type %T in oneof", x))
	}
	return n
}

type SimpleStatement struct {
	Object string   `protobuf:"bytes,1,opt,name=object,proto3" json:"object,omitempty"`
	Refs   []string `protobuf:"bytes,2,rep,name=refs" json:"refs,omitempty"`
	Tags   []string `protobuf:"bytes,3,rep,name=tags" json:"tags,omitempty"`
}

func (m *SimpleStatement) Reset()                    { *m = SimpleStatement{} }
func (m *SimpleStatement) String() string            { return proto1.CompactTextString(m) }
func (*SimpleStatement) ProtoMessage()               {}
func (*SimpleStatement) Descriptor() ([]byte, []int) { return fileDescriptorStmt, []int{2} }

type CompoundStatement struct {
	Body []*SimpleStatement `protobuf:"bytes,1,rep,name=body" json:"body,omitempty"`
}

func (m *CompoundStatement) Reset()                    { *m = CompoundStatement{} }
func (m *CompoundStatement) String() string            { return proto1.CompactTextString(m) }
func (*CompoundStatement) ProtoMessage()               {}
func (*CompoundStatement) Descriptor() ([]byte, []int) { return fileDescriptorStmt, []int{3} }

func (m *CompoundStatement) GetBody() []*SimpleStatement {
	if m != nil {
		return m.Body
	}
	return nil
}

type EnvelopeStatement struct {
	Body []*Statement `protobuf:"bytes,1,rep,name=body" json:"body,omitempty"`
}

func (m *EnvelopeStatement) Reset()                    { *m = EnvelopeStatement{} }
func (m *EnvelopeStatement) String() string            { return proto1.CompactTextString(m) }
func (*EnvelopeStatement) ProtoMessage()               {}
func (*EnvelopeStatement) Descriptor() ([]byte, []int) { return fileDescriptorStmt, []int{4} }

func (m *EnvelopeStatement) GetBody() []*Statement {
	if m != nil {
		return m.Body
	}
	return nil
}

type ArchiveStatement struct {
}

func (m *ArchiveStatement) Reset()                    { *m = ArchiveStatement{} }
func (m *ArchiveStatement) String() string            { return proto1.CompactTextString(m) }
func (*ArchiveStatement) ProtoMessage()               {}
func (*ArchiveStatement) Descriptor() ([]byte, []int) { return fileDescriptorStmt, []int{5} }

func init() {
	proto1.RegisterType((*Statement)(nil), "proto.Statement")
	proto1.RegisterType((*StatementBody)(nil), "proto.StatementBody")
	proto1.RegisterType((*SimpleStatement)(nil), "proto.SimpleStatement")
	proto1.RegisterType((*CompoundStatement)(nil), "proto.CompoundStatement")
	proto1.RegisterType((*EnvelopeStatement)(nil), "proto.EnvelopeStatement")
	proto1.RegisterType((*ArchiveStatement)(nil), "proto.ArchiveStatement")
}

func init() { proto1.RegisterFile("stmt.proto", fileDescriptorStmt) }

var fileDescriptorStmt = []byte{
	// 354 bytes of a gzipped FileDescriptorProto
	0x1f, 0x8b, 0x08, 0x00, 0x00, 0x09, 0x6e, 0x88, 0x02, 0xff, 0x74, 0x91, 0xcd, 0x4e, 0xeb, 0x30,
	0x10, 0x85, 0xaf, 0x93, 0x36, 0xf7, 0x66, 0x7a, 0x81, 0xd6, 0x42, 0xc5, 0x0b, 0x16, 0x51, 0xc4,
	0x22, 0x62, 0x51, 0xa1, 0x56, 0x42, 0x62, 0x85, 0x28, 0x42, 0x62, 0x4b, 0x78, 0x82, 0xfc, 0x98,
	0xd6, 0xa8, 0x8e, 0xad, 0xd8, 0xad, 0xd4, 0x87, 0xe3, 0x95, 0x78, 0x06, 0x14, 0xdb, 0x4d, 0xfa,
	0x23, 0x56, 0x71, 0xbe, 0x39, 0x67, 0x46, 0x67, 0x06, 0x40, 0x69, 0xae, 0x27, 0xb2, 0x16, 0x5a,
	0xe0, 0xbe, 0xf9, 0xc4, 0x5f, 0x08, 0xc2, 0x77, 0x9d, 0x69, 0xca, 0x69, 0xa5, 0xf1, 0x39, 0x78,
	0xac, 0x24, 0x28, 0x42, 0x49, 0x98, 0x7a, 0xac, 0xc4, 0xd7, 0x10, 0xca, 0x75, 0xbe, 0x62, 0x6a,
	0x49, 0x6b, 0xe2, 0x19, 0xdc, 0x81, 0xa6, 0x5a, 0x65, 0x9c, 0x2a, 0x99, 0x15, 0x94, 0xf8, 0xb6,
	0xda, 0x02, 0x9c, 0x40, 0x2f, 0x17, 0xe5, 0x96, 0xf4, 0x22, 0x94, 0x0c, 0xa6, 0x97, 0x76, 0xec,
	0xa4, 0x9d, 0x35, 0x17, 0xe5, 0x36, 0x35, 0x8a, 0xa6, 0x8f, 0x66, 0x9c, 0x2a, 0x9d, 0x71, 0x49,
	0xfa, 0x11, 0x4a, 0xfc, 0xb4, 0x03, 0x4d, 0x55, 0xb1, 0x45, 0x95, 0xe9, 0x75, 0x4d, 0x49, 0x10,
	0xa1, 0xe4, 0x7f, 0xda, 0x81, 0xf8, 0x1b, 0xc1, 0xd9, 0x41, 0x4f, 0x7c, 0x07, 0x81, 0x62, 0x5c,
	0xae, 0xa8, 0xc9, 0x31, 0x98, 0x8e, 0x77, 0x93, 0x0d, 0x6c, 0xb5, 0xaf, 0x7f, 0x52, 0xa7, 0xc3,
	0xf7, 0xf0, 0xaf, 0x10, 0x5c, 0x8a, 0x75, 0x55, 0x9a, 0x90, 0x83, 0x29, 0x71, 0x9e, 0x67, 0x87,
	0xf7, 0x5d, 0xad, 0xb6, 0xf1, 0xd1, 0x6a, 0x43, 0x57, 0x42, 0xda, 0xf8, 0x9d, 0xef, 0xc5, 0xe1,
	0x03, 0xdf, 0x4e, 0x8b, 0x67, 0xf0, 0x37, 0xab, 0x8b, 0x25, 0xdb, 0x50, 0xb7, 0x9c, 0x2b, 0x67,
	0x7b, 0xb2, 0x74, 0xdf, 0xb5, 0x53, 0xce, 0x03, 0xbb, 0xce, 0xf8, 0x0d, 0x2e, 0x8e, 0x92, 0xe0,
	0x31, 0x04, 0x22, 0xff, 0xa4, 0x85, 0x76, 0x97, 0x73, 0x7f, 0x18, 0x43, 0xaf, 0xa6, 0x1f, 0x8a,
	0x78, 0x91, 0x9f, 0x84, 0xa9, 0x79, 0x37, 0x4c, 0x67, 0x0b, 0x45, 0x7c, 0xcb, 0x9a, 0x77, 0xfc,
	0x08, 0xa3, 0x93, 0xa0, 0xf8, 0xd6, 0x9d, 0x0f, 0x45, 0xfe, 0xef, 0x4b, 0xb4, 0x07, 0x8c, 0x1f,
	0x60, 0x74, 0x92, 0x18, 0xdf, 0x1c, 0x34, 0x18, 0x1e, 0xdf, 0xdf, 0x59, 0x31, 0x0c, 0x8f, 0x53,
	0xe7, 0x81, 0x91, 0xce, 0x7e, 0x02, 0x00, 0x00, 0xff, 0xff, 0xb6, 0x29, 0x78, 0x78, 0xaf, 0x02,
	0x00, 0x00,
}
